apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "ui-server.fullname" . }}
  labels:
{{ include "ui-server.labels" . | indent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "ui-server.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "ui-server.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        {{ include "call-nested" (list . "redis" "redis.fullname") }}-client: "true"
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      automountServiceAccountToken: false
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          env:
            - name: SERVER_URL
              value: {{ .Values.serverData.url | default (printf "https://%s" .Values.global.renku.domain) | quote }}
            - name: SERVER_PORT
              value: {{ .Values.serverData.port | default (printf "8080") | quote }}
            - name: SERVER_PREFIX
              value: {{ .Values.serverData.prefix | default (printf "/ui-server") | quote }}
            - name: GATEWAY_URL
              value: {{ .Values.gateway.url | default (printf "https://%s/api" .Values.global.renku.domain) | quote }}
            - name: GATEWAY_LOGIN_PATH
              value: {{ .Values.gateway.loginSuffix | default (printf "/auth/login") | quote }}
            - name: GATEWAY_LOGOUT_PATH
              value: {{ .Values.gateway.logoutSuffix | default (printf "/auth/logout") | quote }}
            - name: AUTH_SERVER_URL
              value: {{ .Values.authentication.url | default (printf "https://%s/auth/realms/Renku" .Values.global.renku.domain) | quote }}
            - name: AUTH_CLIENT_ID
              value: {{ .Values.authentication.id | default (printf "renku-ui") | quote }}
            - name: AUTH_CLIENT_SECRET
              value: {{ .Values.authentication.secret | default (printf "%s" .Values.global.uiserver.clientSecret) | quote }}
            - name: AUTH_TOKEN_TOLERANCE
              value: {{ .Values.authentication.expirationTolerance | default (printf "10") | quote }}
            {{- if .Values.redis.install }}
            - name: REDIS_HOST
              value: {{ include "call-nested" (list . "redis" "redis.fullname") }}-master
            - name: REDIS_PORT
              value: "6379"
            - name: REDIS_DATABASE
              value: "0"
            - name: REDIS_PASSWORD
              value:
            - name: REDIS_SENTINEL
              value: false
            {{ else }}
            - name: REDIS_HOST
              value: {{ .Values.global.redis.host | default (include "call-nested" (list . "redis" "redis.fullname")) }}
            - name: REDIS_PORT
              value: {{ .Values.global.redis.port | quote }}
            - name: REDIS_DATABASE
              value: {{ .Values.global.redis.dbIndex.uiServer | quote }}
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.redis.existingSecret }}
                  key: {{ .Values.global.redis.existingSecretPasswordKey }}
            - name: REDIS_SENTINEL
              value: {{ .Values.global.redis.isSentinel | quote }}
            {{- end }}
          livenessProbe:
            httpGet:
              path: /liveness
              port: http
          readinessProbe:
            httpGet:
              path: /readiness
              port: http
          startupProbe:
            httpGet:
              path: /startup
              port: http
            failureThreshold: 30
            periodSeconds: 5
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
