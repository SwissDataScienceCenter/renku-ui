name: Test and CI

on: [push]

jobs:
  cleanup-runs:
    runs-on: ubuntu-latest
    if: "!startsWith(github.ref, 'refs/tags/')"
    steps:
    - uses: rokroskar/workflow-run-cleanup-action@v0.3.3
      env:
        GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

  test-client:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up node ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: '14.18.0'
    - name: Install client dependencies and build
      run: |
        cd client
        npm install
        npm run-script build
      env:
        NODE_OPTIONS: '--max-old-space-size=4096'
    - name: Run test client
      run: |
        cd client
        npm test
      env:
        CI: true
    - name: Run lint client
      run: |
        cd client
        npm run lint
  
  test-server:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up node ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: '14.18.0'
    - name: Install server dependencies and build
      run: |
        cd server
        npm install
        npm run-script build
      env:
        NODE_OPTIONS: '--max-old-space-size=4096'
    - name: Run test server
      run: |
        cd server
        npm test
      env:
        CI: true
    - name: Run lint server
      run: |
        cd server
        npm run lint

  test-chart:
    # needs: [test-client, test-server]
    runs-on: ubuntu-latest
    # if: "startsWith(github.ref, 'refs/tags/')"
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: Test helm chart
        env:
          HELM_URL: https://get.helm.sh
          HELM_TGZ: helm-v2.17.0-linux-amd64.tar.gz
          TEMP_DIR: ${{ runner.temp }}
        run: |
          wget -q ${HELM_URL}/${HELM_TGZ} -O ${TEMP_DIR}/${HELM_TGZ}
          tar -C ${TEMP_DIR} -xzv -f ${TEMP_DIR}/${HELM_TGZ}
          PATH=${TEMP_DIR}/linux-amd64/:$PATH
          helm init --client-only
          helm dependency update helm-chart/renku-ui-server
          helm lint helm-chart/renku-ui -f helm-chart/minikube-values.yaml
          helm lint helm-chart/renku-ui-server -f helm-chart/minikube-values.yaml
      - name: Build chart and images
        run: |
          python -m pip install --upgrade pip "chartpress==1.3.0" "ruamel.yaml==0.15.54" "six==1.16.0"
          chartpress

  publish-chart:
    needs: test-chart
    runs-on: ubuntu-latest
    if: "startsWith(github.ref, 'refs/tags/')"
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: set up environment variables
      run: |
        echo "GIT_USER=Renku Bot" >> $GITHUB_ENV
        echo "GIT_EMAIL=renku@datascience.ch" >> $GITHUB_ENV
    - name: Push chart and images
      uses: SwissDataScienceCenter/renku-actions/publish-chart@v0.3.0
      env:
        GITHUB_TOKEN: ${{ secrets.DEPLOY_TOKEN }}
        CHART_NAME: renku-ui
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
    - name: Wait for chart to get published
      run: sleep 120
    - name: Update ui version
      uses: SwissDataScienceCenter/renku-actions/update-component-version@v0.3.0
      env:
        GITHUB_TOKEN: ${{ secrets.DEPLOY_TOKEN }}
        CHART_NAME: renku-ui
    - name: Update ui-server version
      uses: SwissDataScienceCenter/renku-actions/update-component-version@v0.3.0
      env:
        GITHUB_TOKEN: ${{ secrets.DEPLOY_TOKEN }}
        CHART_NAME: renku-ui-server
